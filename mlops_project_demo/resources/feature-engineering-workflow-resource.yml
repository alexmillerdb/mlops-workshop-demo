new_cluster: &new_cluster
  new_cluster:
    num_workers: 2
    spark_version: 14.3.x-cpu-ml-scala2.12
    node_type_id: i3.xlarge
    custom_tags:
      clusterSource: mlops-stacks_0.3

common_permissions: &permissions
  permissions:
    - level: CAN_VIEW
      group_name: users

resources:
  jobs:
    write_feature_table_job:
      name: ${bundle.target}-mlops_project_demo-write-feature-table-job-${var.schema_suffix}
      job_clusters:
        - job_cluster_key: write_feature_table_job_cluster
          <<: *new_cluster
      tasks:
        - task_key: PickupFeatures
          job_cluster_key: write_feature_table_job_cluster
          notebook_task:
            notebook_path: ../feature_engineering/notebooks/GenerateAndWriteFeatures.py
            base_parameters:
              # TODO modify these arguments to reflect your setup.
              input_table_path: /databricks-datasets/nyctaxi-with-zipcodes/subsampled
              # TODO: Empty start/end dates will process the whole range. Update this as needed to process recent data.
              input_start_date: "2023-01-01"
              input_end_date: "2023-02-01"
              timestamp_column: tpep_pickup_datetime
              output_table_name: ${bundle.target}.mlops_project_demo.trip_pickup_features_${var.schema_suffix}
              features_transform_module: pickup_features
              primary_keys: zip
              # git source information of current ML resource deployment. It will be persisted as part of the workflow run
              git_source_info: url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}
        - task_key: DropoffFeatures
          job_cluster_key: write_feature_table_job_cluster
          notebook_task:
            notebook_path: ../feature_engineering/notebooks/GenerateAndWriteFeatures.py
            base_parameters:
              # TODO: modify these arguments to reflect your setup.
              input_table_path: /databricks-datasets/nyctaxi-with-zipcodes/subsampled
              # TODO: Empty start/end dates will process the whole range. Update this as needed to process recent data.
              input_start_date: "2023-01-01"
              input_end_date: "2023-02-01"
              timestamp_column: tpep_dropoff_datetime
              output_table_name: ${bundle.target}.mlops_project_demo.trip_dropoff_features_${var.schema_suffix}
              features_transform_module: dropoff_features
              primary_keys: zip
              # git source information of current ML resource deployment. It will be persisted as part of the workflow run
              git_source_info: url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}
      schedule:
        quartz_cron_expression: "0 0 7 * * ?" # daily at 7am
        timezone_id: UTC
      <<: *permissions
      # If you want to turn on notifications for this job, please uncomment the below code,
      # and provide a list of emails to the on_failure argument.
      #
      #  email_notifications:
      #    on_failure:
      #      - first@company.com
      #      - second@company.com
